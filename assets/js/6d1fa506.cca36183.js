"use strict";(self.webpackChunknode_cli_docs=self.webpackChunknode_cli_docs||[]).push([[5876],{7346:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=t(4848),s=t(8453);const o={},a=void 0,c={id:"cardano-devs/contributing/Git-submodules-guide",title:"Git-submodules-guide",description:"What repositories should and shouldn't use git submodule?",source:"@site/docs/cardano-devs/contributing/Git-submodules-guide.md",sourceDirName:"cardano-devs/contributing",slug:"/cardano-devs/contributing/Git-submodules-guide",permalink:"/documentation/cardano-devs/contributing/Git-submodules-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cardano-devs/contributing/Git-submodules-guide.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deprecation",permalink:"/documentation/cardano-devs/contributing/Deprecation"},next:{title:"Running-tests",permalink:"/documentation/cardano-devs/contributing/Running-tests"}},r={},d=[{value:"What repositories should and shouldn&#39;t use <code>git submodule</code>?",id:"what-repositories-should-and-shouldnt-use-git-submodule",level:2},{value:"Projects using <code>git submodule</code>",id:"projects-using-git-submodule",level:2},{value:"Cloning a repository that uses <code>git submodule</code>",id:"cloning-a-repository-that-uses-git-submodule",level:2},{value:"Branches and <code>git submodule</code>",id:"branches-and-git-submodule",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"what-repositories-should-and-shouldnt-use-git-submodule",children:["What repositories should and shouldn't use ",(0,i.jsx)(n.code,{children:"git submodule"}),"?"]}),"\n",(0,i.jsxs)(n.p,{children:["The official way to integrate multiple components in Cardano software is to\nmaintain the code in ",(0,i.jsx)(n.code,{children:"git"})," as separate repositories and publish releases to\n",(0,i.jsx)(n.a,{href:"https://github.com/intersectmbo/cardano-haskell-packages",children:"Cardano Haskell Packages (CHaP)"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"All published components must operate in this manner."}),"\n",(0,i.jsx)(n.p,{children:"To streamline development within teams, teams have the option to use submodules for integrating a subset of components they frequently work with."}),"\n",(0,i.jsx)(n.p,{children:"However, certain ground rules are in place to ensure the compatibility of all components with CHaP:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Any repository that uses ",(0,i.jsx)(n.code,{children:"git submodule"})," must:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Not contain any component code directly. Component code must only be\nreferenced via submodules. This means that repositories using\n",(0,i.jsx)(n.code,{children:"git submodule"})," are not standalone projects but rather 'meta-projects'\nthat serve as collections of other projects."]}),"\n",(0,i.jsx)(n.li,{children:"Be owned by a particular team. There is no shared ownership of such\nrepositories."}),"\n",(0,i.jsxs)(n.li,{children:["Not be used to release artifacts directly or indirectly. This precaution\nis taken to minimize the inadvertent inclusion of any ",(0,i.jsx)(n.code,{children:"git submodule"})," related elements\ninto the release process. Note that ",(0,i.jsx)(n.code,{children:"git submodule"})," is not considered a primary method for\nbuilding software in IOG."]}),"\n",(0,i.jsxs)(n.li,{children:["Not have a name that makes it sound like official software or tie itself\nto one.  For example ",(0,i.jsx)(n.code,{children:"node-and-cli-team"})," is not an acceptable name because\nit suggests it is related to ",(0,i.jsx)(n.code,{children:"cardano-node"})," or ",(0,i.jsx)(n.code,{children:"cardano-cli"}),". This precaution\nprevents users from accidently believing the meta-project is in anyway\nofficial and ask for support."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"projects-using-git-submodule",children:["Projects using ",(0,i.jsx)(n.code,{children:"git submodule"})]}),"\n",(0,i.jsxs)(n.p,{children:["Currently, the following meta-projects use ",(0,i.jsx)(n.code,{children:"git submodule"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/input-output-hk/fusion-flamingo",children:"fusion-flamingo"})}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"cloning-a-repository-that-uses-git-submodule",children:["Cloning a repository that uses ",(0,i.jsx)(n.code,{children:"git submodule"})]}),"\n",(0,i.jsx)(n.p,{children:"To clone the meta-project and initialize the submodules within it, use the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ git clone --recurse-submodules git@github.com:input-output-hk/<project-name>.git\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you accidentally cloned the meta-project using regular clone, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ git clone git@github.com:input-output-hk/<project-name>.git\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can initialize the submodules afterwards:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"<project-name> $ git submodule update --init --recursive\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"branches-and-git-submodule",children:["Branches and ",(0,i.jsx)(n.code,{children:"git submodule"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"git submodule"})," does not have support for tracking branches. Instead, it deals directly with commits. When changes are pushed for a meta-project, these changes will reference specific commits for each submodule."]}),"\n",(0,i.jsx)(n.p,{children:"Nevertheless, it is possible to use tracking branches by manually switching to them in each submodule."}),"\n",(0,i.jsx)(n.p,{children:"However, one challenge you may encounter is that when switching branches or commits at the meta-project level, the submodules will revert to referencing specific commits instead of tracking branches."}),"\n",(0,i.jsxs)(n.p,{children:["There is a solution to this. Although ",(0,i.jsx)(n.code,{children:"git submodule"})," doesn't directly support tracking branches, you can configure submodules to have a branch:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ git submodule set-branch --branch <branch-name> <submodule-name>\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will configure the specified submodule to use the specified branch."}),"\n",(0,i.jsxs)(n.p,{children:["Please note that this branch configuration is relatively basic. When you switch ",(0,i.jsx)(n.code,{children:"git"})," references at the meta-project level, your submodules will continue to reference specific commits rather than branches."]}),"\n",(0,i.jsxs)(n.p,{children:["You can find the script in ",(0,i.jsx)(n.a,{href:"https://github.com/input-output-hk/cardano-dev",children:"cardano-dev"}),"\nto work with. Note that while it cannot keep your submodules pointing at the relevant\nbranch, it can restore your submodules to their configured branches with a simple\ninvocation."]}),"\n",(0,i.jsx)(n.p,{children:"Here is an end-to-end example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'$ git clone git@github.com:input-output-hk/fusion-flamingo.git fusion-flamingo-2\n$ cd fusion-flamingo-2\n$ git submodule update --init --recursive\n$ git checkout newhoggy/test-submodules\n$ cat .gitmodules\n[submodule "cardano-api"]\n\tpath = cardano-api\n\turl = git@github.com:intersectmbo/cardano-api.git\n\tbranch = newhoggy/use-tag-script-from-cardano-dev-instead\n[submodule "cardano-cli"]\n\tpath = cardano-cli\n\turl = git@github.com:intersectmbo/cardano-cli.git\n\tbranch = main\n'})}),"\n",(0,i.jsx)(n.p,{children:"Note that the submodules are on specific commits:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ (cd cardano-api; git status)\nHEAD detached at 6f3ce029e\nnothing to commit, working tree clean\n$ (cd cardano-cli; git status)\nHEAD detached at 8399c472f\nnothing to commit, working tree clean\n"})}),"\n",(0,i.jsx)(n.p,{children:"Running the script puts the submodules on the branches instead:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ ../cardano-dev/scripts/switch-submodule-branch.sh\nSwitching submodule cardano-api to use branch newhoggy/use-tag-script-from-cardano-dev-instead\nSwitching submodule cardano-cli to use branch main\n$ (cd cardano-api; git status)\nOn branch newhoggy/use-tag-script-from-cardano-dev-instead\nYour branch is up to date with 'origin/newhoggy/use-tag-script-from-cardano-dev-instead'.\n\nnothing to commit, working tree clean\n$ (cd cardano-cli; git status)\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);