"use strict";(self.webpackChunknode_cli_docs=self.webpackChunknode_cli_docs||[]).push([[614],{3372:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=o(4848),s=o(8453);const r={title:"Peer to peer",id:"p2p",sidebar_position:5,keywords:["Get-started","run the node","installation","networking","p2p","peer to peer","cardano-node","cardano node"]},i="Peer-to-peer (P2P) networking",a={id:"cardano-node/p2p",title:"Peer to peer",description:"* Through automatic P2P, registered nodes can discover and establish connections with each other",source:"@site/docs/cardano-node/p2p.md",sourceDirName:"cardano-node",slug:"/cardano-node/p2p",permalink:"/documentation/cardano-node/p2p",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cardano-node/p2p.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Peer to peer",id:"p2p",sidebar_position:5,keywords:["Get-started","run the node","installation","networking","p2p","peer to peer","cardano-node","cardano node"]},sidebar:"tutorialSidebar",previous:{title:"Run the node",permalink:"/documentation/cardano-node/running-node"},next:{title:"Tracing system",permalink:"/documentation/cardano-node/new-tracing-system/trace-dispatcher"}},d={},l=[{value:"What is next?",id:"what-is-next",level:3},{value:"The P2P topology file",id:"the-p2p-topology-file",level:3},{value:"Example of topology files for a stake pool",id:"example-of-topology-files-for-a-stake-pool",level:3},{value:"Configuring the node to use P2P",id:"configuring-the-node-to-use-p2p",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"peer-to-peer-p2p-networking",children:"Peer-to-peer (P2P) networking"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Through automatic P2P, registered nodes can discover and establish connections with each other"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Nodes can establish full-duplex connections, operating simultaneously as servers and clients for the mini-protocols"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Nodes can maintain certain static topologies, including their own relays and block producers, as well as trusted peers with which continuous connections are desired"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Root peers can be reloaded using the SIGHUP signal, eliminating the need for a restart"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The node can dynamically manage the connections, each node maintains a set of peers mapped into three categories:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cold peers"})," \u2012 existing (known) peers without an established network connection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"warm peers"})," \u2012 peers with an established bearer connection, which is only used for network measurements without implementing any of the node-to-node mini-protocols (not active)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"hot peers"})," \u2012 peers that have a connection, which is being used by all three node-to-node mini-protocols (active peers)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Newly discovered peers are initially added to the cold peer set. The P2P governor is then responsible for peer connection management."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Maintaining diversity in hop distances contributes to better block distribution times across the globally distributed network"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"In the case of adversarial behavior, the peer can be immediately demoted from the hot, warm, or cold sets"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Upstream peers are classified into three categories: known, established, and active."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"P2P",src:o(4267).A+"",width:"873",height:"915"})}),"\n",(0,t.jsx)(n.h3,{id:"what-is-next",children:"What is next?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Peer sharing"}),"\n",(0,t.jsx)(n.li,{children:"Ouroboros Genesis release"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://docs.cardano.org/explore-cardano/cardano-network/p2p-networking",children:"Peer-to-peer (P2P) networking"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://youtu.be/wnv7VCa79eo",children:"Interview with the networking team lead"})}),"\n",(0,t.jsx)(n.h3,{id:"the-p2p-topology-file",children:"The P2P topology file"}),"\n",(0,t.jsx)(n.p,{children:"Example of a topology file for a node not involved in block production or block propagation:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n   "localRoots":[\n      {\n         "accessPoints":[\n            \n         ],\n         "advertise":false,\n         "valency":1\n      }\n   ],\n   "publicRoots":[\n      {\n         "accessPoints":[\n            {\n               "address":"relays-new.cardano-mainnet.iohk.io",\n               "port":3001\n            }\n         ],\n         "advertise":false\n      }\n   ],\n   "useLedgerAfterSlot":322000\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"example-of-topology-files-for-a-stake-pool",children:"Example of topology files for a stake pool"}),"\n",(0,t.jsxs)(n.p,{children:["The block-producing node includes its own relays (",(0,t.jsx)(n.code,{children:"x.x.x.x"})," and ",(0,t.jsx)(n.code,{children:"y.y.y.y"}),") under local roots. Note that the example uses ",(0,t.jsx)(n.code,{children:'"useLedgerAfterSlot": -1'})," to indicate that it should never use ",(0,t.jsx)(n.code,{children:"LedgerPeers"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n   "localRoots":[\n      {\n         "accessPoints":[\n            {\n               "address":"x.x.x.x",\n               "port":3000\n            },\n            {\n               "address":"y.y.y.y",\n               "port":3000\n            }\n         ],\n         "advertise":false,\n         "valency":1\n      }\n   ],\n   "publicRoots":[\n      {\n         "accessPoints":[\n            \n         ],\n         "advertise":false\n      }\n   ],\n   "useLedgerAfterSlot":-1\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The relay ",(0,t.jsx)(n.code,{children:"x.x.x.x"})," includes its own block-producing node (",(0,t.jsx)(n.code,{children:"z.z.z.z"}),"), the other relay (",(0,t.jsx)(n.code,{children:"y.y.y.y"}),") under local roots, and a few other root peers under public roots. Note that this time, the example does use LedgerPeers - ",(0,t.jsx)(n.code,{children:'"useLedgerAfterSlot": 10000000'}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n   "localRoots":[\n      {\n         "accessPoints":[\n            {\n               "address":"z.z.z.z",\n               "port":3000\n            },\n            {\n               "address":"y.y.y.y",\n               "port":3000\n            }\n         ],\n         "advertise":false,\n         "valency":1\n      }\n   ],\n   "publicRoots":[\n      {\n         "accessPoints":[\n            {\n               "address":"relays-new.cardano-mainnet.iohk.io",\n               "port":3001\n            }\n         ],\n         "advertise":false\n      }\n   ],\n   "useLedgerAfterSlot":322000\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"configuring-the-node-to-use-p2p",children:"Configuring the node to use P2P"}),"\n",(0,t.jsxs)(n.p,{children:["You can enable P2P from the configuration file. For example, in the preview testnet ",(0,t.jsx)(n.a,{href:"https://book.world.dev.cardano.org/environments/preview/config.json",children:"configuration file"}),", you will find the field ",(0,t.jsx)(n.code,{children:"EnableP2P"}),", which can be set to either ",(0,t.jsx)(n.code,{children:"false"})," or ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["On the preview testnet, the default is ",(0,t.jsx)(n.code,{children:"true"})," since this network is already running with P2P. You will also need to configure the target number of ",(0,t.jsx)(n.em,{children:"active"}),", ",(0,t.jsx)(n.em,{children:"established"})," and ",(0,t.jsx)(n.em,{children:"known"})," peers, together with the target number of ",(0,t.jsx)(n.em,{children:"root"})," peers:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  ...\n  "EnableP2P": true,\n  "TargetNumberOfActivePeers": 20,\n  "TargetNumberOfEstablishedPeers": 40,\n  "TargetNumberOfKnownPeers": 100,\n  "TargetNumberOfRootPeers": 100,\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},4267:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/p2p-68068afe6e1316e8c1cbd7fd5bea261d.png"},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);